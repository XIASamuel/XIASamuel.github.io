{"version":3,"file":"component---src-pages-project-1-cs-js-9489725bf8dc1e2512e7.js","mappings":"slMAgCe,SAASA,IACpB,IAAKC,EAAQC,GAAaC,EAAAA,SAAe,KACpCC,EAAYC,GAAiBF,EAAAA,SAAe,KAC5CG,EAAOC,GAAYJ,EAAAA,SAAe,KAElCK,EAAUC,IAAqBC,EAAAA,EAAAA,GAAgB,aAAc,KAC7DC,EAAUC,IAAeF,EAAAA,EAAAA,GAAgB,aAAc,IACvDG,EAAaC,IAAkBJ,EAAAA,EAAAA,GAAgB,gBAAiB,IAChEK,EAAWC,IAAgBN,EAAAA,EAAAA,GAAgB,cAAe,KAC1DO,EAAKC,IAAUR,EAAAA,EAAAA,GAAgB,YAAa,IAEjD,MAAOS,EAAiBC,GAAsBjB,EAAAA,SAAe,KACtDkB,EAAMC,GAAWnB,EAAAA,UAAe,GACjCoB,EAAc,IAAMD,GAAQ,GAG5BE,EAAaC,IACfH,GAAQ,GACRjB,EAAcoB,EAAOC,OAAOC,MAAM,EA0GxCxB,EAAAA,WAAgByB,UACd,IAAIC,EAAQ,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIC,EAAAA,EAAAA,EAAAA,OAAqCD,IAAK,CAC5DD,EAAMG,KACJ,sBAAIC,MAAO,CACPC,WAAW,SACb,aACA,0BAAKH,EAAAA,EAAAA,EAA6BD,GAAGK,WACrC,2BACA,2BAAS,aAGb,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAAA,EAAAA,EAA6BD,GAAGO,SAASC,OAAQF,IAAK,CACxE,IAAIG,EAAUR,EAAAA,EAAAA,EAA6BD,GAAGO,SAASD,GAAGI,KACtDC,EAAUV,EAAAA,EAAAA,EAA6BD,GAAGO,SAASD,GAAGM,KACtDtC,EAAamC,EAAU,IAAKE,EAEhCZ,EAAMG,KACJ,yCACE,0BAAKO,GACL,0BAAKE,GACL,0BAAI,gBAACE,EAAA,EAAM,CAACC,QAAQ,UAAUC,QAASrB,EAAYG,MAAOvB,GAAW,QAAkB,cAG7F,CACDF,EAAU2B,EACX,IACC,IAGD,MAeMiB,EAAO,CACTC,OAHWvC,EAIXwC,SAAU,CACR,CACEC,MAAO,cACPH,KAAM7B,EACNiC,YAAa,oBACbC,gBAAiB,6BASzB,OACA,gCACA,uBACAlB,MAAO,CACHmB,MAAO,OACPC,OAAQ,OACRC,MAAO,MACPH,gBAAgB,UAChBI,SAAU,UAIV,uBAAKtB,MAAO,CAACoB,OAAQ,QAASG,OAAO,kBAAmBC,OAAO,WAC3D,2BACI,gBAACd,EAAA,EAAM,CAACe,KAAK,MAAMzB,MAAO,CAACqB,MAAO,OAAQK,aAAc,OAAQf,QAAQ,QAAM,SAIlF,sBAAIX,MAAO,CAAC2B,UAAW,OAAQC,UAAW,SAAUC,WAAW,UAAS,eACxE,gBAACnB,EAAA,EAAM,CAACV,MAAO,CAACwB,OAAO,OAAQZ,QAvLvC,WACIrC,EAASwB,KAAKxB,EAAS8B,OAAS,GAChC7B,GAAkB,OAAID,IACtBuD,QAAQC,MAAMxD,EAClB,GAmL+D,mBACvD,gBAACmC,EAAA,EAAM,CAACV,MAAO,CAACwB,OAAO,OAAQZ,QAjLvC,WACIpC,EAAkB,IAClBO,EAAa,IACbF,EAAe,GACfF,EAAY,GACZM,EAAO,IACP6C,QAAQC,MAAMxD,EAClB,GA0K8D,kBACtD,sBAAIyB,MAAO,CAACgC,UAAU,kBAAmBH,WAAW,QAAQD,UAAU,QAASV,gBAAgB,YAAW,qBACpFxC,GAAsB,EAAZE,IAAgBqD,QAAQ,KAI5D,uBAAKjC,MAAO,CAACkC,QAAQ,OAAOd,OAAO,MAAOC,MAAO,OAAOc,SAAS,OAAQZ,OAAO,oBAI/EhD,EAAS6D,KAAIC,IACV,IAAIC,EAAM,GACNC,EAAY,GAahB,OAZAD,EAAIvC,KAAK,sCAAcsC,IAEvBvD,EACK0D,QAAOC,GAAKA,EAAEC,UAAYL,IAC1BD,KAAIK,IACDF,EAAUxC,KACN,0BACI,sBAAI4C,QAAS,GAAIF,EAAEzE,QACnB,sBAAIgC,MAAO,CAAE4B,UAAW,UAAYa,EAAEpE,QAE7C,IAGL,gBAACuE,EAAA,EAAK,CAACC,SAAO,GACd,6BACI,0BAAKP,IAET,6BACKC,EACD,0BACI,sBAAII,QAAS,EAAG3C,MAAO,CAAE4B,UAAW,QAASV,gBAAgB,YAC5DlC,EAAIqD,EAAO,MAIZ,KAKhB,uBAAKrC,MAAO,CAACuB,OAAO,kBAAmBH,OAAO,UAC1C,gBAAC,KAAI,CAAC0B,QA/FE,CACZC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACN3B,SAAU,OAEZ4B,MAAO,CACLC,SAAS,EACTC,KAAM,iCAuFkBvC,KAAMA,MAItC,uBACAb,MAAO,CACHmB,MAAO,QACPC,OAAQ,OACRC,MAAO,MACPgC,WAAY,kBACZnC,gBAAgB,UAChBiB,SAAU,SAGV,sBAAInC,MAAO,CAAC4B,UAAW,SAAUD,UAAU,OAAQE,WAAW,UAAS,oBACvE,sBAAI7B,MAAO,CAAC4B,UAAW,SAAU3B,WAAW,SAAU4B,WAAW,UAAS,eAC1E,gBAACe,EAAA,EAAK,CAAEC,SAAO,EAACS,OAAK,kBACjB,6BACKtF,GACG,aAGhB,gBAACuF,EAAA,EAAK,CAACnE,KAAMA,EAAMoE,OAAQlE,GACvB,gBAACiE,EAAA,SAAY,CAACE,aAAW,GACvB,gBAACF,EAAA,QAAW,KAAEpF,IAEhB,gBAACoF,EAAA,OAAU,KACX,gBAACG,EAAA,EAAI,KACD,gBAACA,EAAA,QAAU,CAACC,UAAU,QAClB,gBAACD,EAAA,QAAU,iBACX,gBAACA,EAAA,SAAW,CAACE,UAAQ,EAACC,YAAY,kBAClCC,SAAUC,GAAK5E,EAAmB4E,EAAEtE,OAAOC,QAE3C,0BAAQsE,UAAQ,EAACC,UAAQ,4BACxB1F,EAAS6D,KAAIC,GACP,0BAAQ3C,MAAO2C,GAAK,YAAWA,OAK1C,gBAACqB,EAAA,QAAU,CAACC,UAAU,QACpB,gBAACD,EAAA,QAAU,cACX,gBAACA,EAAA,SAAW,CAACG,YAAY,eACvBC,SAAWC,GAAKzF,EAASyF,EAAEtE,OAAOC,QAElC,0BAAQsE,UAAQ,EAACC,UAAQ,mBACzB,0BAAQvE,MAAM,KAAG,KACjB,0BAAQA,MAAM,QAAM,MACpB,0BAAQA,MAAM,QAAM,MACpB,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,QAAM,MACpB,0BAAQA,MAAM,QAAM,MACpB,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,QAAM,MACpB,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,YAAU,SAMhC,gBAAC6D,EAAA,SAAY,KACX,gBAAC7C,EAAA,EAAM,CAACC,QAAQ,YAAYC,QAAStB,GAAY,UAGjD,gBAACoB,EAAA,EAAM,CAACC,QAAQ,UAAUC,QArRhC,WACI,IAAIsD,EAAI7F,EACRyD,QAAQqC,IAAID,GACZ,IAAIE,EAAI,GAEC,KAALF,IACAE,EAAI,KAEC,QAALF,IACAE,EAAI,MAEC,QAALF,IACAE,EAAI,MAEC,KAALF,IACAE,EAAI,KAEC,QAALF,IACAE,EAAI,MAEC,QAALF,IACAE,EAAI,MAEC,KAALF,IACAE,EAAI,KAEC,QAALF,IACAE,EAAI,MAEC,KAALF,IACAE,EAAI,KAEC,KAALF,IACAE,EAAI,KAEC,YAALF,IACAE,EAAI,KAEJ/F,GAASa,GACTJ,EAAUiB,KAAK,CACX2C,SAAUxD,EACVlB,OAAQG,EACRE,MAAO+F,EACPC,MAAOhG,IAEXC,EAAS,IACTa,EAAmB,IACnBN,EAAeD,EAAc,GAC7BG,GAAa,OAAID,IACjBO,GAAQ,IAERiF,MAAM,2BAGV,IAAIC,EAAW,EACXC,EAAc,EAClB,IAAK,IAAI3E,EAAI,EAAGA,GAAKtB,EAAS8B,OAAQR,IAAK,CACvC,IAAI4E,EAAc,EACdC,EAAiB,EAGnB5F,EACG0D,QAAOC,GAAKA,EAAEC,UAAY7C,IAC1BuC,KAAIK,IACa,KAAZA,EAAEkC,SAKJF,GAAyB,EAAVhC,EAAE4B,MAAY,EAC7BE,GAAsB,EAAV9B,EAAE4B,MAAY,EAC1BK,IACAF,IACF,IAGNC,GAA8C,EAAjBC,EAE7B1F,EAAIa,EAAI,GAAK4E,EAAYxC,QAAQ,GACjChD,GAAO,OAAID,IACXL,EAAY4F,GACZ1F,EAAe2F,EACnB,CACJ,GAkMuD,qBAQ3D,CA/UEI,EAAAA,GAAAA,SACEC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,G","sources":["webpack://gatsby-starter-default/./src/pages/project1/cs.js"],"sourcesContent":["import * as React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport jsonData from '../project1/cs-2019.json'\r\nimport { Button, Table, Modal, Form } from 'react-bootstrap'\r\nimport { useLocalStorage } from \"react-use\"\r\n\r\n//For Line Chart\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Line } from 'react-chartjs-2';\r\n  \r\n  \r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n\r\n\r\nexport default function CSPage(){\r\n    let [course, setCourse] = React.useState([])\r\n    let [courseInfo, setCourseInfo] = React.useState(\"\")\r\n    let [grade, setGrade] = React.useState(\"\")\r\n\r\n    let [Semester, setCreateSemester] = useLocalStorage(\"SemesterCS\", [])\r\n    let [totalGpa, setTotalGpa] = useLocalStorage(\"totalGpaCS\", 0)\r\n    let [totalCourse, setTotalCourse] = useLocalStorage(\"totalCourseCS\", 0)\r\n    let [gradeList, setGrageList] = useLocalStorage(\"gradeListCS\", [])\r\n    let [gpa, setGpa] = useLocalStorage(\"gpaListCS\", [])\r\n\r\n    const [currentSemester, setCurrentSemester] = React.useState(\"\");\r\n    const [show, setShow] = React.useState(false);\r\n    const handleClose = () => setShow(false)\r\n        \r\n\r\n    const handleShow = Course => {\r\n        setShow(true);\r\n        setCourseInfo(Course.target.value)\r\n    }\r\n\r\n    function createSemester() {\r\n        Semester.push(Semester.length + 1)\r\n        setCreateSemester([...Semester])\r\n        console.table(Semester)\r\n    }\r\n    \r\n   \r\n    function clearSemester() {\r\n        setCreateSemester([])\r\n        setGrageList([])\r\n        setTotalCourse(0)\r\n        setTotalGpa(0)\r\n        setGpa([])\r\n        console.table(Semester)\r\n    }\r\n\r\n    \r\n    function AddToSemester() {\r\n        let p = grade\r\n        console.log(p)\r\n        let g = \"\"\r\n\r\n        if (p == \"4\") {\r\n            g = \"A\"\r\n        }\r\n        if (p == \"3.75\") {\r\n            g = \"A-\"\r\n        }\r\n        if (p == \"3.25\") {\r\n            g = \"B+\"\r\n        }\r\n        if (p == \"3\") {\r\n            g = \"B\"\r\n        }\r\n        if (p == \"2.75\") {\r\n            g = \"B-\"\r\n        }\r\n        if (p == \"2.25\") {\r\n            g = \"C+\"\r\n        }\r\n        if (p == \"2\") {\r\n            g = \"C\"\r\n        }\r\n        if (p == \"1.75\") {\r\n            g = \"C-\"\r\n        }\r\n        if (p == \"1\") {\r\n            g = \"D\"\r\n        }\r\n        if (p == \"0\") {\r\n            g = \"F\"\r\n        }\r\n        if (p == \"excluded\") {\r\n            g = \"W\"\r\n        }\r\n        if (grade && currentSemester) {\r\n            gradeList.push({\r\n                semester: currentSemester,\r\n                course: courseInfo,\r\n                grade: g,\r\n                point: grade,\r\n            })\r\n            setGrade(\"\")\r\n            setCurrentSemester(\"\")\r\n            setTotalCourse(totalCourse + 1)\r\n            setGrageList([...gradeList])\r\n            setShow(false)  \r\n        }else{\r\n            alert(\"Please select an option\");\r\n        }\r\n\r\n        let TotalGpa = 0\r\n        let TotalCourse = 0\r\n        for (let i = 1; i <= Semester.length; i++) {\r\n            let semesterGpa = 0\r\n            let semesterCourse = 0\r\n\r\n            {\r\n              gradeList\r\n                .filter(s => s.semester == i)\r\n                .map(s => {\r\n                  if (s.rating == \"W\") {\r\n                    semesterGpa = semesterGpa\r\n                    TotalGpa = TotalGpa\r\n                    semesterCourse = semesterCourse\r\n                  } else {\r\n                    semesterGpa += s.point * 1 * 3\r\n                    TotalGpa += s.point * 1 * 3\r\n                    semesterCourse++\r\n                    TotalCourse++\r\n                  }\r\n                })\r\n            }\r\n            semesterGpa = semesterGpa / (semesterCourse * 3)\r\n            \r\n            gpa[i - 1] = semesterGpa.toFixed(2)\r\n            setGpa([...gpa])\r\n            setTotalGpa(TotalGpa)\r\n            setTotalCourse(TotalCourse)\r\n        }  \r\n    }\r\n\r\n\r\n  React.useEffect(async() => { \r\n    let items = []\r\n    for (let i = 0; i < jsonData.curriculum.subjects.length; i++) {\r\n      items.push(\r\n        <tr style={{\r\n            fontWeight:'bold'\r\n        }}>\r\n          <td>{jsonData.curriculum.subjects[i].groupName}</td>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      )\r\n      for (let t = 0; t < jsonData.curriculum.subjects[i].subjects.length; t++) {\r\n        var courseC = jsonData.curriculum.subjects[i].subjects[t].code\r\n        var courseN = jsonData.curriculum.subjects[i].subjects[t].name\r\n        var courseInfo = courseC + \" \" +courseN\r\n\r\n        items.push(\r\n          <tr>\r\n            <td>{courseC}</td>\r\n            <td>{courseN}</td>\r\n            <td><Button variant='success' onClick={handleShow} value={courseInfo}>Add</Button></td>\r\n          </tr>\r\n        )\r\n      }\r\n     setCourse(items)\r\n    }\r\n  }, [])\r\n\r\n    //line chart start\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top'\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'GPA per Semester Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n    const labels = Semester\r\n      \r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: 'GPA Dataset',\r\n            data: gpa,\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          },\r\n      \r\n        ],\r\n      };\r\n    //line chart end\r\n\r\n\r\n\r\n    return(\r\n    <>\r\n    <div \r\n    style={{\r\n        float: 'left',\r\n        height: '100%',\r\n        width: '35%',\r\n        backgroundColor:'#F2F1D7',\r\n        position: 'fixed'\r\n\r\n    }}\r\n    >\r\n        <div style={{height: '24.5%', border:'1px solid black', margin:'0 auto'}}>\r\n            <nav>\r\n                <Button href='../' style={{width: '100%', borderRadius: '0px'}} variant='dark'>\r\n                    Home\r\n                </Button>\r\n            </nav>\r\n            <h3 style={{marginTop: '10px', textAlign: 'center', fontFamily:'Times'}}>GPA TRACKER</h3>\r\n            <Button style={{margin:'5px'}} onClick={createSemester}>Create Semester</Button>\r\n            <Button style={{margin:'5px'}} onClick={clearSemester}>Clear Semester</Button>\r\n            <h4 style={{borderTop:'2px solid black', fontFamily:'Arial',textAlign:'right', backgroundColor:'#FFD700'}}>\r\n               Overall G.P.A. : {(totalGpa/(totalCourse*3)).toFixed(2)}</h4>\r\n        \r\n        </div>\r\n        \r\n        <div style={{padding:'1rem',height:'40%', width: '100%',overflow:'auto', border:'1px solid black'}}>\r\n        \r\n\r\n        \r\n        {Semester.map(item => {\r\n            let sem = []\r\n            let CourseGpa = []\r\n            sem.push(<th>Semester {item}</th>)\r\n            {\r\n            gradeList\r\n                .filter(s => s.semester == item)\r\n                .map(s =>{\r\n                    CourseGpa.push(\r\n                        <tr>\r\n                            <td colSpan={2}>{s.course}</td>\r\n                            <td style={{ textAlign: \"right\" }}>{s.grade}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            return (\r\n                <Table striped>\r\n                <thead>\r\n                    <tr>{sem}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {CourseGpa}\r\n                    <tr>\r\n                        <td colSpan={3} style={{ textAlign: \"right\", backgroundColor:'#ADD8E6'}}>\r\n                        {gpa[item - 1]}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n                </Table>\r\n            )\r\n        })}\r\n\r\n        </div>\r\n        <div style={{border:'1px solid black', height:'35.5%'}}>\r\n            <Line options={options} data={data} />\r\n        </div>\r\n    </div>\r\n\r\n    <div \r\n    style={{\r\n        float: 'right',\r\n        height: '100%',\r\n        width: '65%',\r\n        borderLeft: '2px solid black',\r\n        backgroundColor:'#F1FAFA',\r\n        overflow: 'auto'\r\n    }}\r\n    >\r\n        <h1 style={{textAlign: 'center', marginTop:'20px', fontFamily:'Times'}}>Computer Science</h1>\r\n        <h3 style={{textAlign: 'center', fontWeight:'bolder', fontFamily:'Times'}}>Course List</h3>\r\n        <Table  striped hover>\r\n            <tbody>\r\n                {course}\r\n            </tbody>\r\n        </Table>\r\n    </div>\r\n    <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{courseInfo}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Semester</Form.Label>\r\n                <Form.Select required placeholder=\"Select Semester\"\r\n                onChange={e => setCurrentSemester(e.target.value)}\r\n                >\r\n                <option selected disabled>Select Semester added</option>\r\n                {Semester.map(item => {\r\n                return(<option value={item}>Semester {item}</option>)\r\n                })}\r\n                </Form.Select>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Grade</Form.Label>\r\n              <Form.Select placeholder=\"Select Grade\" \r\n                onChange ={e => setGrade(e.target.value)}\r\n              >\r\n                <option selected disabled>Select Grade</option>\r\n                <option value='4'>A</option>\r\n                <option value='3.75'>A-</option>\r\n                <option value='3.25'>B+</option>\r\n                <option value='3'>B</option>\r\n                <option value='2.75'>B-</option>\r\n                <option value='2.25'>C+</option>\r\n                <option value='2'>C</option>\r\n                <option value='1.75'>C-</option>\r\n                <option value='1'>D</option>\r\n                <option value='0'>F</option>\r\n                <option value='excluded'>W</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Form>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={AddToSemester}>\r\n            Add to Semester\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n    )\r\n\r\n}   \r\n"],"names":["CSPage","course","setCourse","React","courseInfo","setCourseInfo","grade","setGrade","Semester","setCreateSemester","useLocalStorage","totalGpa","setTotalGpa","totalCourse","setTotalCourse","gradeList","setGrageList","gpa","setGpa","currentSemester","setCurrentSemester","show","setShow","handleClose","handleShow","Course","target","value","async","items","i","jsonData","push","style","fontWeight","groupName","t","subjects","length","courseC","code","courseN","name","Button","variant","onClick","data","labels","datasets","label","borderColor","backgroundColor","float","height","width","position","border","margin","href","borderRadius","marginTop","textAlign","fontFamily","console","table","borderTop","toFixed","padding","overflow","map","item","sem","CourseGpa","filter","s","semester","colSpan","Table","striped","options","responsive","plugins","legend","title","display","text","borderLeft","hover","Modal","onHide","closeButton","Form","className","required","placeholder","onChange","e","selected","disabled","p","log","g","point","alert","TotalGpa","TotalCourse","semesterGpa","semesterCourse","rating","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend"],"sourceRoot":""}